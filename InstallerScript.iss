; Script generated by the Inno Setup Script Wizard.

#define MyAppName "Internet Manager"
#define MyAppNameNoSpace "Internet_Manager"
#define MyAppVersion "1.1.0"
#define MyAppPublisher "Dalichrome"
#define MyAppURL "https://dalichro.me/project/internet-manager/"
#define MyAppExeName "internet_manager.exe"
#define MyAppCreateTasks "create_tasks.exe"
#define MyAppRemoveTasks "remove_tasks.exe"
#define MyAppKillServer "kill_server.exe"
#define MyAppServerExeName "internet_manager_server.exe"

[Setup]
AppId={{830FD9CF-9FF5-429D-A381-6E48510D3202}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
ArchitecturesAllowed=x64compatible
ArchitecturesInstallIn64BitMode=x64compatible
DisableProgramGroupPage=yes
OutputBaseFilename={#MyAppNameNoSpace}_{#MyAppVersion}_Setup
Compression=lzma
SolidCompression=yes
WizardStyle=modern
PrivilegesRequired=admin
UninstallDisplayName=Uninstall
CloseApplications=force

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "dist\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "dist\{#MyAppCreateTasks}"; DestDir: "{app}"; Flags: ignoreversion
Source: "dist\{#MyAppServerExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "dist\{#MyAppRemoveTasks}"; DestDir: "{app}"; Flags: ignoreversion
Source: "dist\{#MyAppKillServer}"; DestDir: "{app}"; Flags: ignoreversion
Source: "defaults\client-config.yaml"; DestDir: "{app}"; Flags: ignoreversion onlyifdoesntexist
Source: "defaults\config.yaml"; DestDir: "{app}"; Flags: ignoreversion onlyifdoesntexist
Source: "README.md"; DestDir: "{app}"; Flags: ignoreversion
Source: "LICENSE"; DestDir: "{app}"; Flags: ignoreversion
Source: "attribution.txt"; DestDir: "{app}"; Flags: ignoreversion

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppCreateTasks}"; Flags: runhidden
Filename: "{app}\{#MyAppServerExeName}"; Flags: runascurrentuser runhidden nowait
Filename: "cmd"; Parameters: "/C timeout /T 15 /NOBREAK"; Flags: runhidden
Filename: "{app}\{#MyAppExeName}"; Flags: nowait postinstall skipifsilent

[UninstallRun]
Filename: "{app}\{#MyAppKillServer}"; Flags: runhidden; RunOnceId: "KillServerTask"
Filename: "{app}\{#MyAppRemoveTasks}"; Flags: runhidden; RunOnceId: "RemoveTasks"

[Code]
function IsUpgradeInstall(): Boolean;
var
  InstallDir: string;
begin
  Result := False;
  if RegQueryStringValue(HKLM, 'Software\MyCompany\Internet Manager', 'InstallPath', InstallDir) then
  begin
    if DirExists(InstallDir) then
    begin
      Result := True;
    end;
  end;
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  ResultCode: Integer;
begin
  if CurStep = ssInstall then
  begin
    if IsUpgradeInstall() then
    begin
      Exec(ExpandConstant('{app}\{#MyAppKillServer}'), '', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
    end;
  end;
end;
